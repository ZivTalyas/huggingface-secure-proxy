version: '3.8'

services:
  frontend:
    build:
      context: ../..
      dockerfile: docker/dev/Dockerfile
    ports:
      - "8000:8000"
    environment:
      - FRONTEND_HOST=0.0.0.0
      - FRONTEND_PORT=8000
      - BACKEND_URL=http://backend:8001
      - BACKEND_HOST=backend
      - BACKEND_PORT=8001
      - SECURITY_LEVEL=high
      - PYTHONUNBUFFERED=1
      - PYTHONPATH=/app:/app/tests
    volumes:
      - ../../app:/app
      - ../../tests:/app/tests
    depends_on:
      - backend
      - redis
    command: uvicorn frontend.main:app --host 0.0.0.0 --port 8000 --reload

  backend:
    build:
      context: ../..
      dockerfile: docker/dev/Dockerfile
    container_name: backend-1
    ports:
      - "8001:8001"
    environment:
      - BACKEND_HOST=0.0.0.0
      - BACKEND_PORT=8001
      - MODEL_NAME=distilbert-base-uncased
      - TOXIC_THRESHOLD=0.7
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - GEMINI_API_KEY=${GEMINI_API_KEY}
      - PYTHONUNBUFFERED=1
      - PYTHONPATH=/app:/app/tests
    volumes:
      - ../../app:/app
      - ../../tests:/app/tests
      - ../../cpp:/app/cpp
    depends_on:
      - redis
    command: uvicorn backend.main:app --host 0.0.0.0 --port 8001 --reload

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes

  # Uncomment to enable monitoring with Prometheus and Grafana
  # prometheus:
  #   image: prom/prometheus:latest
  #   ports:
  #     - "9090:9090"
  #   volumes:
  #     - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
  #   command:
  #     - '--config.file=/etc/prometheus/prometheus.yml'
  #   depends_on:
  #     - frontend
  #     - backend

  # grafana:
  #   image: grafana/grafana:latest
  #   ports:
  #     - "3000:3000"
  #   volumes:
  #     - grafana_data:/var/lib/grafana
  #   environment:
  #     - GF_SECURITY_ADMIN_PASSWORD=admin
  #   depends_on:
  #     - prometheus

volumes:
  redis_data:
  # grafana_data: