version: '3.8'

services:
  frontend:
    build:
      context: ..
      dockerfile: docker/production/Dockerfile
      target: production
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      - FRONTEND_HOST=0.0.0.0
      - FRONTEND_PORT=8000
      - BACKEND_HOST=backend
      - BACKEND_PORT=8001
      - SECURITY_LEVEL=high
      - PYTHONUNBUFFERED=1
      - PYTHONDONTWRITEBYTECODE=1
      - PYTHONFAULTHANDLER=1
    depends_on:
      - backend
      - redis
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/status"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  backend:
    build:
      context: ..
      dockerfile: docker/production/Dockerfile
      target: production
    restart: unless-stopped
    environment:
      - BACKEND_HOST=0.0.0.0
      - BACKEND_PORT=8001
      - MODEL_NAME=distilbert-base-uncased
      - TOXIC_THRESHOLD=0.7
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - PYTHONUNBUFFERED=1
      - PYTHONDONTWRITEBYTECODE=1
      - PYTHONFAULTHANDLER=1
    depends_on:
      - redis
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  redis:
    image: redis:7-alpine
    command: redis-server --requirepass ${REDIS_PASSWORD:-your_secure_password}
    volumes:
      - redis_data:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Monitoring and logging
  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    restart: unless-stopped
    depends_on:
      - backend
      - frontend

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin}
    restart: unless-stopped
    depends_on:
      - prometheus

volumes:
  redis_data:
  grafana_data:
