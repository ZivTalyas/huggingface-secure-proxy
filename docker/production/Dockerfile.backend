# --- Builder Stage ---
# Used to build the C++ extension
FROM python:3.11-slim as builder

# Install build dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    build-essential \
    python3-dev \
    cmake \
    nlohmann-json3-dev \
    libboost-all-dev \
    libpoppler-cpp-dev \
    libpoppler-private-dev \
    pkg-config \
    python3.11-dev \
    libpython3.11-dev \
    && rm -rf /var/lib/apt/lists/*

# Install Python build dependencies
RUN pip3 install --no-cache-dir "pybind11[global]"

# Set up working directory and copy source
WORKDIR /src
COPY . .

# Build and install the C++ module
WORKDIR /src/cpp
RUN python3 setup.py install

# --- Runtime Stage ---
# The final, lean production image
FROM python:3.11-slim

# Install runtime dependencies including OpenSSL
RUN apt-get update && apt-get install -y --no-install-recommends \
    libgomp1 \
    libpoppler-cpp0v5 \
    libboost-regex1.74.0 \
    openssl \
    && rm -rf /var/lib/apt/lists/*

# Copy installed Python packages (including our C++ module) from the builder stage
COPY --from=builder /usr/local/lib/python3.11/site-packages /usr/local/lib/python3.11/site-packages

# Set up app directory
WORKDIR /app

# Create certs directory
RUN mkdir -p /app/certs

# Install Python dependencies from requirements.txt
COPY requirements.txt ./
RUN pip install --no-cache-dir -r requirements.txt

# Copy application code from the builder stage
COPY --from=builder /src/app /app
COPY --from=builder /src/run.py .

# Set environment variables (can be overridden)
ENV BACKEND_HOST=0.0.0.0 \
    BACKEND_PORT=10000 \
    PYTHONUNBUFFERED=1

# Expose both HTTP and HTTPS ports
EXPOSE 10000

# Start the application
CMD ["uvicorn", "backend.main:app", "--host", "0.0.0.0", "--port", "10000"]
